/**
 * Format a given token into the format expected in CSS/SCSS-based projects.
 * @param {string} token
 * @returns {string}
 */
export declare function formatTokenName(token: any): string;
export declare const tokens: {
    colors: ("primaryButtonTextColorDefault" | "primaryButtonTextColorDisabled" | "primaryButtonBackgroundColorDefault" | "primaryButtonBackgroundColorHover" | "primaryButtonBackgroundColorLoading" | "primaryButtonBackgroundColorDisabled" | "secondaryButtonTextColorDefault" | "secondaryButtonTextColorDisabled" | "secondaryButtonBackgroundColorDefault" | "secondaryButtonBackgroundColorHover" | "secondaryButtonBackgroundColorLoading" | "secondaryButtonBackgroundColorDisabled" | "secondaryButtonBorderColorDefault" | "secondaryButtonBorderColorHover" | "secondaryButtonBorderColorLoading" | "secondaryButtonBorderColorDisabled" | "basicButtonTextColorDefault" | "basicButtonTextColorDisabled" | "basicButtonBackgroundColorDefault" | "basicButtonBackgroundColorHover" | "basicButtonBackgroundColorLoading" | "basicButtonBackgroundColorDisabled" | "basicButtonBorderColorDefault" | "basicButtonBorderColorHover" | "basicButtonBorderColorLoading" | "basicButtonBorderColorDisabled" | "destructiveButtonTextColorDefault" | "destructiveButtonTextColorDisabled" | "destructiveButtonBackgroundColorDefault" | "destructiveButtonBackgroundColorHover" | "destructiveButtonBackgroundColorLoading" | "destructiveButtonBackgroundColorDisabled" | "checkboxColorSelected" | "checkboxColorDisabled" | "checkboxBackgroundColorDefault" | "checkboxBackgroundColorSelected" | "checkboxBackgroundColorDisabled" | "checkboxBorderColorDefault" | "checkboxBorderColorSelected" | "checkboxBorderColorSelectedDisabled" | "checkboxBorderColorDisabled" | "radioButtonColorSelected" | "radioButtonColorDisabled" | "radioButtonBackgroundColorDefault" | "radioButtonBackgroundColorSelected" | "radioButtonBackgroundColorDisabled" | "radioButtonBorderColorDefault" | "radioButtonBorderColorSelected" | "radioButtonBorderColorSelectedDisabled" | "radioButtonBorderColorDisabled" | "switchColorDefault" | "switchColorDisabled" | "switchBackgroundColorDefault" | "switchBackgroundColorSelected" | "switchBackgroundColorSelectedDisabled" | "switchBackgroundColorDisabled" | "iconColorPrimaryDefault" | "iconColorPrimaryDisabled" | "iconColorInvertedDefault" | "iconColorInvertedDisabled" | "iconColorLinkDefault" | "iconColorLinkDisabled" | "iconColorErrorDefault" | "iconColorSuccessDefault" | "iconColorWarningDefault" | "segmentedControlBackgroundColorDefault" | "segmentedControlBackgroundColorHover" | "segmentedControlBackgroundColorSelected" | "segmentedControlBackgroundColorDisabled" | "segmentedControlBorderColorDefault" | "segmentedControlBorderColorHover" | "segmentedControlBorderColorSelected" | "segmentedControlBorderColorDisabled" | "primaryFontColor" | "secondaryFontColor" | "tertiaryFontColor" | "inputTextColorDefault" | "inputBackgroundColorDefault" | "inputBackgroundColorHover" | "inputBackgroundColorActive" | "inputBackgroundColorDisabled" | "inputBorderColorDefault" | "inputBorderColorHover" | "inputBorderColorActive" | "inputBorderColorDisabled" | "filterTextColor" | "filterBackgroundColor" | "linkColorDefault" | "linkColorHover" | "toastErrorColor" | "toastErrorBackgroundColor" | "toastWarningColor" | "toastWarningBackgroundColor" | "toastInfoColor" | "toastInfoBackgroundColor" | "toastSuccessColor" | "toastSuccessBackgroundColor" | "primarySurfaceBackgroundColor" | "dividerColor" | "uiBackgroundColorDefault" | "uiBackgroundColorHover" | "overlayBackgroundColor" | "overlayTextColor" | "tooltipBackgroundColor" | "tooltipTextColor" | "tooltipInvertedBackgroundColor" | "tooltipInvertedColor" | "tooltipImportantBackgroundColor" | "tooltipImportantColor")[];
};
