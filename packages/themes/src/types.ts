export type ThemeName = 'legacy' | 'light';

export interface Theme {
  /**primary button */
  primaryButtonTextColorDefault: string;
  primaryButtonTextColorDisabled: string;
  primaryButtonBackgroundColorDefault: string;
  primaryButtonBackgroundColorHover: string;
  primaryButtonBackgroundColorLoading: string;
  primaryButtonBackgroundColorDisabled: string;
  /**secondary button */
  secondaryButtonTextColorDefault: string;
  secondaryButtonTextColorDisabled: string;
  secondaryButtonBackgroundColorDefault: string;
  secondaryButtonBackgroundColorHover: string;
  secondaryButtonBackgroundColorLoading: string;
  secondaryButtonBackgroundColorDisabled: string;
  secondaryButtonBorderColorDefault: string;
  secondaryButtonBorderColorHover: string;
  secondaryButtonBorderColorLoading: string;
  secondaryButtonBorderColorDisabled: string;
  /**basic button */
  basicButtonTextColorDefault: string;
  basicButtonTextColorDisabled: string;
  basicButtonBackgroundColorDefault: string;
  basicButtonBackgroundColorHover: string;
  basicButtonBackgroundColorLoading: string;
  basicButtonBackgroundColorDisabled: string;
  basicButtonBorderColorDefault: string;
  basicButtonBorderColorHover: string;
  basicButtonBorderColorLoading: string;
  basicButtonBorderColorDisabled: string;
  /**destructive button */
  destructiveButtonTextColorDefault: string;
  destructiveButtonTextColorDisabled: string;
  destructiveButtonBackgroundColorDefault: string;
  destructiveButtonBackgroundColorHover: string;
  destructiveButtonBackgroundColorLoading: string;
  destructiveButtonBackgroundColorDisabled: string;
  /**checkbox */
  checkboxColorActive: string;
  checkboxColorDisabled: string;
  checkboxBackgroundColorDefault: string;
  checkboxBackgroundColorActive: string;
  checkboxBackgroundColorDisabled: string;
  checkboxBorderColorDefault: string;
  checkboxBorderColorActive: string;
  checkboxBorderColorDisabled: string;
  /**radio button */
  radioButtonColorActive: string;
  radioButtonColorDisabled: string;
  radioButtonBackgroundColorDefault: string;
  radioButtonBackgroundColorActive: string;
  radioButtonBackgroundColorDisabled: string;
  radioButtonBorderColorDefault: string;
  radioButtonBorderColorActive: string;
  radioButtonBorderColorDisabled: string;
  /**switch */
  switchColorDefault: string;
  switchColorDisabled: string;
  switchBackgroundColorDefault: string;
  switchBackgroundColorActive: string;
  switchBackgroundColorDisabled: string;
  /**icon */
  iconColorPrimaryDefault: string;
  iconColorPrimaryDisabled: string;
  iconColorSecondaryDefault: string;
  iconColorSecondaryDisabled: string;
  iconColorInvertedDefault: string;
  iconColorInvertedDisabled: string;
  iconColorLinkDefault: string;
  iconColorLinkDisabled: string;
  iconColorErrorDefault: string;
  iconColorSuccessDefault: string;
  iconColorWarningDefault: string;
  /**ButtonGroup */
  buttonGroupBackgroundColorDefault: string;
  buttonGroupBackgroundColorHover: string;
  buttonGroupBackgroundColorLoading: string;
  buttonGroupBackgroundColorDisabled: string;
  buttonGroupBorderColorDefault: string;
  buttonGroupBorderColorHover: string;
  buttonGroupBorderColorLoading: string;
  buttonGroupBorderColorDisabled: string;
  /**Font */
  primaryFontColor: string;
  secondaryFontColor: string;
  tertiaryFontColor: string;
  /**Input */
  inputTextColorDefault: string;
  inputBackgroundColorDefault: string;
  inputBackgroundColorHover: string;
  inputBackgroundColorLoading: string;
  inputBackgroundColorDisabled: string;
  inputBorderColorDefault: string;
  inputBorderColorHover: string;
  inputBorderColorLoading: string;
  inputBorderColorDisabled: string;
  /**Filter */
  filterTextColor: string;
  filterBackgroundColor: string;
  /**Link */
  linkColorDefault: string;
  linkColorHover: string;
  /**Toast */
  toastErrorColor: string;
  toastErrorBackgroundColor: string;
  toastWarningColor: string;
  toastWarningBackgroundColor: string;
  toastInfoColor: string;
  toastInfoBackgroundColor: string;
  /**Independent */
  primarySurfaceBackgroundColorDefault: string;
  primarySurfaceBackgroundColorHover: string;
  secondarySurfaceBackgroundColorDefault: string;
  secondarySurfaceBackgroundColorHover: string;
  dividerColor: string;
  uiBackgroundColor: string;
  overlayBackgroundColor: string;
  overlayTextColor: string;
}

export type Themes = Record<ThemeName, Theme>;
